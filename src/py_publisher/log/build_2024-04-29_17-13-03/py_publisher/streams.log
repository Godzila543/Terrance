[0.342s] Invoking command in '/home/colin/Terrance/src/py_publisher': BRANCH=${BRANCH:-master}
# Other options CHSH=${CHSH:-yes} HOME="${HOME:-$(eval echo ~$USER)}" KEEP_ZSHRC=${KEEP_ZSHRC:-no}
command_exists() {
  command -v "$@" >/dev/null 2>&1
}
user_can_sudo() {
  # Check if sudo is installed
  command_exists sudo || return 1
  # Termux can't run sudo, so we can detect it and exit the function early.
  case "$PREFIX" in
  *com.termux*) return 1 ;;
  esac
  # The following command has 3 parts:
  #
  # 1. Run `sudo` with `-v`. Does the following:
  #    • with privilege: asks for a password immediately.
  #    • without privilege: exits with error code 1 and prints the message:
  #      Sorry, user <username> may not run sudo on <hostname>
  #
  # 2. Pass `-n` to `sudo` to tell it to not ask for a password. If the
  #    password is not PYTHONPATH=/home/colin/Terrance/src/py_publisher/build/py_publisher/prefix_override:/home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages:${PYTHONPATH} REMOTE=${REMOTE:-https://github.com/${REPO}.git} REPO=${REPO:-ohmyzsh/ohmyzsh} RUNZSH=${RUNZSH:-yes} SUDO_COMMAND=/usr/bin/sh -c #!/bin/sh
#
# This script should be run via curl:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via wget:
#   sh -c "$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via fetch:
#   sh -c "$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#
# As an alternative, you can first download the install script and run it afterwards:
#   wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
#   sh install.sh
#
# You can tweak the install behavior by setting variables when running the script. For
# example, to change the path to the Oh My Zsh repository:
#   ZSH=~/.zsh sh install.sh
#
# Respects the following environment variables:
#   ZDOTDIR - path to Zsh dotfiles directory (default: unset). See [1][2]
#             [1] https://zsh.sourceforge.io/Doc/Release/Parameters.html#index-ZDOTDIR
#             [2] https://zsh.sourceforge.io/Doc/Release/Files.html#index-ZDOTDIR_002c-use-of
#   ZSH     - path to the Oh My Zsh repository folder (default: $HOME/.oh-my-zsh)
#   REPO    - name of the GitHub repo to install from (default: ohmyzsh/ohmyzsh)
#   REMOTE  - full remote URL of the git repo to install (default: GitHub via HTTPS)
#   BRANCH  - branch to check out immediately after install (default: master)
#
# Other options:
#   CHSH       - 'no' means the installer will not change the default shell (default: yes)
#   RUNZSH     - 'no' means the installer will not run zsh after the install (default: yes)
#   KEEP_ZSHRC - 'yes' means the installer will not replace an existing .zshrc (default: no)
#
# You can also pass some arguments to the install script to set some these options:
#   --skip-chsh: has the same behavior as setting CHSH to 'no'
#   --unattended: sets both CHSH and RUNZSH to 'no'
#   --keep-zshrc: sets KEEP_ZSHRC to 'yes'
# For example:
#   sh install.sh --unattended
# or:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
#
set -e
# Make sure important variables exist if not already defined
#
# $USER is defined by login(1) which is not always executed (e.g. containers)
# POSIX: https://pubs.opengroup.org/onlinepubs/009695299/utilities/id.html
# $HOME is defined at the time of login, but it could be unset. If it is unset,
# a tilde by itself (~) will not be expanded to the current user's home directory.
# POSIX: https://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap08.html#tag_08_03
# macOS does not have getent, but this works even if $HOME is unset
# Track if $ZSH was provided USER=${USER:-$(id -u -n)} ZSH="${ZSH:-$HOME/.oh-my-zsh}" custom_zsh=${ZSH:+yes}
# Use $zdot to keep track of where the directory is for zsh dotfiles
# To check if $ZDOTDIR was provided, explicitly check for $ZDOTDIR zdot="${ZDOTDIR:-$HOME}"
# Default value for $ZSH
# a) if $ZDOTDIR is supplied and not $HOME: $ZDOTDIR/ohmyzsh
# b) otherwise, $HOME/.oh-my-zsh
if [ -n "$ZDOTDIR" ] && [ "$ZDOTDIR" != "$HOME" ]; then
  ZSH="${ZSH:-$ZDOTDIR/ohmyzsh}"
fi
# Default settings /usr/bin/python3 -W ignore:setup.py install is deprecated setup.py egg_info --egg-base build/py_publisher build --build-base /home/colin/Terrance/src/py_publisher/build/py_publisher/build install --record /home/colin/Terrance/src/py_publisher/build/py_publisher/install.log --single-version-externally-managed install_data
[0.463s] running egg_info
[0.464s] creating build/py_publisher/py_publisher.egg-info
[0.464s] writing build/py_publisher/py_publisher.egg-info/PKG-INFO
[0.464s] writing dependency_links to build/py_publisher/py_publisher.egg-info/dependency_links.txt
[0.464s] writing entry points to build/py_publisher/py_publisher.egg-info/entry_points.txt
[0.464s] writing requirements to build/py_publisher/py_publisher.egg-info/requires.txt
[0.465s] writing top-level names to build/py_publisher/py_publisher.egg-info/top_level.txt
[0.465s] writing manifest file 'build/py_publisher/py_publisher.egg-info/SOURCES.txt'
[0.466s] reading manifest file 'build/py_publisher/py_publisher.egg-info/SOURCES.txt'
[0.466s] adding license file 'LICENSE'
[0.466s] writing manifest file 'build/py_publisher/py_publisher.egg-info/SOURCES.txt'
[0.466s] running build
[0.467s] running build_py
[0.467s] creating /home/colin/Terrance/src/py_publisher/build/py_publisher/build
[0.467s] creating /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib
[0.467s] creating /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher
[0.467s] copying py_publisher/publisher_member_function.py -> /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher
[0.467s] copying py_publisher/__init__.py -> /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher
[0.467s] copying py_publisher/subscriber_member_function.py -> /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher
[0.467s] running install
[0.468s] running install_lib
[0.468s] creating /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher
[0.468s] copying /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher/publisher_member_function.py -> /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher
[0.468s] copying /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher/__init__.py -> /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher
[0.468s] copying /home/colin/Terrance/src/py_publisher/build/py_publisher/build/lib/py_publisher/subscriber_member_function.py -> /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher
[0.468s] byte-compiling /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher/publisher_member_function.py to publisher_member_function.cpython-310.pyc
[0.469s] byte-compiling /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher/__init__.py to __init__.cpython-310.pyc
[0.469s] byte-compiling /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher/subscriber_member_function.py to subscriber_member_function.cpython-310.pyc
[0.469s] running install_data
[0.469s] creating /home/colin/Terrance/src/py_publisher/install/py_publisher/share/ament_index
[0.469s] creating /home/colin/Terrance/src/py_publisher/install/py_publisher/share/ament_index/resource_index
[0.469s] creating /home/colin/Terrance/src/py_publisher/install/py_publisher/share/ament_index/resource_index/packages
[0.469s] copying resource/py_publisher -> /home/colin/Terrance/src/py_publisher/install/py_publisher/share/ament_index/resource_index/packages
[0.470s] copying package.xml -> /home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher
[0.470s] running install_egg_info
[0.471s] Copying build/py_publisher/py_publisher.egg-info to /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages/py_publisher-0.0.0-py3.10.egg-info
[0.471s] running install_scripts
[0.483s] Installing listener script to /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/py_publisher
[0.483s] Installing talker script to /home/colin/Terrance/src/py_publisher/install/py_publisher/lib/py_publisher
[0.483s] writing list of installed files to '/home/colin/Terrance/src/py_publisher/build/py_publisher/install.log'
[0.497s] Invoked command in '/home/colin/Terrance/src/py_publisher' returned '0': BRANCH=${BRANCH:-master}
# Other options CHSH=${CHSH:-yes} HOME="${HOME:-$(eval echo ~$USER)}" KEEP_ZSHRC=${KEEP_ZSHRC:-no}
command_exists() {
  command -v "$@" >/dev/null 2>&1
}
user_can_sudo() {
  # Check if sudo is installed
  command_exists sudo || return 1
  # Termux can't run sudo, so we can detect it and exit the function early.
  case "$PREFIX" in
  *com.termux*) return 1 ;;
  esac
  # The following command has 3 parts:
  #
  # 1. Run `sudo` with `-v`. Does the following:
  #    • with privilege: asks for a password immediately.
  #    • without privilege: exits with error code 1 and prints the message:
  #      Sorry, user <username> may not run sudo on <hostname>
  #
  # 2. Pass `-n` to `sudo` to tell it to not ask for a password. If the
  #    password is not PYTHONPATH=/home/colin/Terrance/src/py_publisher/build/py_publisher/prefix_override:/home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages:${PYTHONPATH} REMOTE=${REMOTE:-https://github.com/${REPO}.git} REPO=${REPO:-ohmyzsh/ohmyzsh} RUNZSH=${RUNZSH:-yes} SUDO_COMMAND=/usr/bin/sh -c #!/bin/sh
#
# This script should be run via curl:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via wget:
#   sh -c "$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via fetch:
#   sh -c "$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#
# As an alternative, you can first download the install script and run it afterwards:
#   wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
#   sh install.sh
#
# You can tweak the install behavior by setting variables when running the script. For
# example, to change the path to the Oh My Zsh repository:
#   ZSH=~/.zsh sh install.sh
#
# Respects the following environment variables:
#   ZDOTDIR - path to Zsh dotfiles directory (default: unset). See [1][2]
#             [1] https://zsh.sourceforge.io/Doc/Release/Parameters.html#index-ZDOTDIR
#             [2] https://zsh.sourceforge.io/Doc/Release/Files.html#index-ZDOTDIR_002c-use-of
#   ZSH     - path to the Oh My Zsh repository folder (default: $HOME/.oh-my-zsh)
#   REPO    - name of the GitHub repo to install from (default: ohmyzsh/ohmyzsh)
#   REMOTE  - full remote URL of the git repo to install (default: GitHub via HTTPS)
#   BRANCH  - branch to check out immediately after install (default: master)
#
# Other options:
#   CHSH       - 'no' means the installer will not change the default shell (default: yes)
#   RUNZSH     - 'no' means the installer will not run zsh after the install (default: yes)
#   KEEP_ZSHRC - 'yes' means the installer will not replace an existing .zshrc (default: no)
#
# You can also pass some arguments to the install script to set some these options:
#   --skip-chsh: has the same behavior as setting CHSH to 'no'
#   --unattended: sets both CHSH and RUNZSH to 'no'
#   --keep-zshrc: sets KEEP_ZSHRC to 'yes'
# For example:
#   sh install.sh --unattended
# or:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
#
set -e
# Make sure important variables exist if not already defined
#
# $USER is defined by login(1) which is not always executed (e.g. containers)
# POSIX: https://pubs.opengroup.org/onlinepubs/009695299/utilities/id.html
# $HOME is defined at the time of login, but it could be unset. If it is unset,
# a tilde by itself (~) will not be expanded to the current user's home directory.
# POSIX: https://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap08.html#tag_08_03
# macOS does not have getent, but this works even if $HOME is unset
# Track if $ZSH was provided USER=${USER:-$(id -u -n)} ZSH="${ZSH:-$HOME/.oh-my-zsh}" custom_zsh=${ZSH:+yes}
# Use $zdot to keep track of where the directory is for zsh dotfiles
# To check if $ZDOTDIR was provided, explicitly check for $ZDOTDIR zdot="${ZDOTDIR:-$HOME}"
# Default value for $ZSH
# a) if $ZDOTDIR is supplied and not $HOME: $ZDOTDIR/ohmyzsh
# b) otherwise, $HOME/.oh-my-zsh
if [ -n "$ZDOTDIR" ] && [ "$ZDOTDIR" != "$HOME" ]; then
  ZSH="${ZSH:-$ZDOTDIR/ohmyzsh}"
fi
# Default settings /usr/bin/python3 -W ignore:setup.py install is deprecated setup.py egg_info --egg-base build/py_publisher build --build-base /home/colin/Terrance/src/py_publisher/build/py_publisher/build install --record /home/colin/Terrance/src/py_publisher/build/py_publisher/install.log --single-version-externally-managed install_data
