[0.055s] DEBUG:colcon:Command line arguments: ['/usr/bin/colcon', 'build', '--packages-select', 'py_publisher']
[0.055s] DEBUG:colcon:Parsed command line arguments: Namespace(log_base=None, log_level=None, verb_name='build', build_base='build', install_base='install', merge_install=False, symlink_install=False, test_result_base=None, continue_on_error=False, executor='parallel', parallel_workers=16, event_handlers=None, ignore_user_meta=False, metas=['./colcon.meta'], base_paths=['.'], packages_ignore=None, packages_ignore_regex=None, paths=None, packages_up_to=None, packages_up_to_regex=None, packages_above=None, packages_above_and_dependencies=None, packages_above_depth=None, packages_select_by_dep=None, packages_skip_by_dep=None, packages_skip_up_to=None, packages_select_build_failed=False, packages_skip_build_finished=False, packages_select_test_failures=False, packages_skip_test_passed=False, packages_select=['py_publisher'], packages_skip=None, packages_select_regex=None, packages_skip_regex=None, packages_start=None, packages_end=None, allow_overriding=[], cmake_args=None, cmake_target=None, cmake_target_skip_unavailable=False, cmake_clean_cache=False, cmake_clean_first=False, cmake_force_configure=False, ament_cmake_args=None, catkin_cmake_args=None, catkin_skip_building_tests=False, mixin_files=None, mixin=None, verb_parser=<colcon_mixin.mixin.mixin_argument.MixinArgumentDecorator object at 0x7fdeaf750d00>, verb_extension=<colcon_core.verb.build.BuildVerb object at 0x7fdeaf859300>, main=<bound method BuildVerb.main of <colcon_core.verb.build.BuildVerb object at 0x7fdeaf859300>>, mixin_verb=('build',))
[0.129s] Level 1:colcon.colcon_core.package_discovery:discover_packages(colcon_meta) check parameters
[0.129s] Level 1:colcon.colcon_core.package_discovery:discover_packages(recursive) check parameters
[0.129s] Level 1:colcon.colcon_core.package_discovery:discover_packages(ignore) check parameters
[0.129s] Level 1:colcon.colcon_core.package_discovery:discover_packages(path) check parameters
[0.129s] Level 1:colcon.colcon_core.package_discovery:discover_packages(colcon_meta) discover
[0.129s] Level 1:colcon.colcon_core.package_discovery:discover_packages(recursive) discover
[0.129s] INFO:colcon.colcon_core.package_discovery:Crawling recursively for packages in '/home/colin/Terrance/src/py_publisher'
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['ignore', 'ignore_ament_install']
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'ignore'
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'ignore_ament_install'
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['colcon_pkg']
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'colcon_pkg'
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['colcon_meta']
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'colcon_meta'
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['ros']
[0.129s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'ros'
[0.137s] DEBUG:colcon.colcon_core.package_identification:Package '.' with type 'ros.ament_python' and name 'py_publisher'
[0.137s] Level 1:colcon.colcon_core.package_discovery:discover_packages(recursive) using defaults
[0.137s] Level 1:colcon.colcon_core.package_discovery:discover_packages(ignore) discover
[0.137s] Level 1:colcon.colcon_core.package_discovery:discover_packages(ignore) using defaults
[0.137s] Level 1:colcon.colcon_core.package_discovery:discover_packages(path) discover
[0.137s] Level 1:colcon.colcon_core.package_discovery:discover_packages(path) using defaults
[0.148s] Level 1:colcon.colcon_core.package_discovery:discover_packages(prefix_path) check parameters
[0.148s] Level 1:colcon.colcon_core.package_discovery:discover_packages(prefix_path) discover
[0.149s] DEBUG:colcon.colcon_installed_package_information.package_discovery:Found 281 installed packages in /opt/ros/iron
[0.158s] Level 1:colcon.colcon_core.package_discovery:discover_packages(prefix_path) using defaults
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'cmake_args' from command line to 'None'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'cmake_target' from command line to 'None'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'cmake_target_skip_unavailable' from command line to 'False'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'cmake_clean_cache' from command line to 'False'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'cmake_clean_first' from command line to 'False'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'cmake_force_configure' from command line to 'False'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'ament_cmake_args' from command line to 'None'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'catkin_cmake_args' from command line to 'None'
[0.179s] Level 5:colcon.colcon_core.verb:set package 'py_publisher' build argument 'catkin_skip_building_tests' from command line to 'False'
[0.179s] DEBUG:colcon.colcon_core.verb:Building package 'py_publisher' with the following arguments: {'ament_cmake_args': None, 'build_base': '/home/colin/Terrance/src/py_publisher/build/py_publisher', 'catkin_cmake_args': None, 'catkin_skip_building_tests': False, 'cmake_args': None, 'cmake_clean_cache': False, 'cmake_clean_first': False, 'cmake_force_configure': False, 'cmake_target': None, 'cmake_target_skip_unavailable': False, 'install_base': '/home/colin/Terrance/src/py_publisher/install/py_publisher', 'merge_install': False, 'path': '/home/colin/Terrance/src/py_publisher', 'symlink_install': False, 'test_result_base': None}
[0.179s] INFO:colcon.colcon_core.executor:Executing jobs using 'parallel' executor
[0.180s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:run_until_complete
[0.180s] INFO:colcon.colcon_ros.task.ament_python.build:Building ROS package in '/home/colin/Terrance/src/py_publisher' with build type 'ament_python'
[0.180s] Level 1:colcon.colcon_core.shell:create_environment_hook('py_publisher', 'ament_prefix_path')
[0.182s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_core.shell.bat': Not used on non-Windows systems
[0.182s] INFO:colcon.colcon_core.shell:Creating environment hook '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/hook/ament_prefix_path.ps1'
[0.182s] INFO:colcon.colcon_core.shell:Creating environment descriptor '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/hook/ament_prefix_path.dsv'
[0.183s] INFO:colcon.colcon_core.shell:Creating environment hook '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/hook/ament_prefix_path.sh'
[0.183s] INFO:colcon.colcon_core.shell:Skip shell extension 'powershell' for command environment: Not usable outside of PowerShell
[0.183s] DEBUG:colcon.colcon_core.shell:Skip shell extension 'dsv' for command environment
[0.326s] INFO:colcon.colcon_core.task.python.build:Building Python package in '/home/colin/Terrance/src/py_publisher'
[0.326s] INFO:colcon.colcon_core.shell:Skip shell extension 'powershell' for command environment: Not usable outside of PowerShell
[0.326s] DEBUG:colcon.colcon_core.shell:Skip shell extension 'dsv' for command environment
[0.523s] DEBUG:colcon.colcon_core.event_handler.log_command:Invoking command in '/home/colin/Terrance/src/py_publisher': BRANCH=${BRANCH:-master}
# Other options CHSH=${CHSH:-yes} HOME="${HOME:-$(eval echo ~$USER)}" KEEP_ZSHRC=${KEEP_ZSHRC:-no}
command_exists() {
  command -v "$@" >/dev/null 2>&1
}
user_can_sudo() {
  # Check if sudo is installed
  command_exists sudo || return 1
  # Termux can't run sudo, so we can detect it and exit the function early.
  case "$PREFIX" in
  *com.termux*) return 1 ;;
  esac
  # The following command has 3 parts:
  #
  # 1. Run `sudo` with `-v`. Does the following:
  #    • with privilege: asks for a password immediately.
  #    • without privilege: exits with error code 1 and prints the message:
  #      Sorry, user <username> may not run sudo on <hostname>
  #
  # 2. Pass `-n` to `sudo` to tell it to not ask for a password. If the
  #    password is not PYTHONPATH=/home/colin/Terrance/src/py_publisher/build/py_publisher/prefix_override:/home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages:${PYTHONPATH} REMOTE=${REMOTE:-https://github.com/${REPO}.git} REPO=${REPO:-ohmyzsh/ohmyzsh} RUNZSH=${RUNZSH:-yes} SUDO_COMMAND=/usr/bin/sh -c #!/bin/sh
#
# This script should be run via curl:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via wget:
#   sh -c "$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via fetch:
#   sh -c "$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#
# As an alternative, you can first download the install script and run it afterwards:
#   wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
#   sh install.sh
#
# You can tweak the install behavior by setting variables when running the script. For
# example, to change the path to the Oh My Zsh repository:
#   ZSH=~/.zsh sh install.sh
#
# Respects the following environment variables:
#   ZDOTDIR - path to Zsh dotfiles directory (default: unset). See [1][2]
#             [1] https://zsh.sourceforge.io/Doc/Release/Parameters.html#index-ZDOTDIR
#             [2] https://zsh.sourceforge.io/Doc/Release/Files.html#index-ZDOTDIR_002c-use-of
#   ZSH     - path to the Oh My Zsh repository folder (default: $HOME/.oh-my-zsh)
#   REPO    - name of the GitHub repo to install from (default: ohmyzsh/ohmyzsh)
#   REMOTE  - full remote URL of the git repo to install (default: GitHub via HTTPS)
#   BRANCH  - branch to check out immediately after install (default: master)
#
# Other options:
#   CHSH       - 'no' means the installer will not change the default shell (default: yes)
#   RUNZSH     - 'no' means the installer will not run zsh after the install (default: yes)
#   KEEP_ZSHRC - 'yes' means the installer will not replace an existing .zshrc (default: no)
#
# You can also pass some arguments to the install script to set some these options:
#   --skip-chsh: has the same behavior as setting CHSH to 'no'
#   --unattended: sets both CHSH and RUNZSH to 'no'
#   --keep-zshrc: sets KEEP_ZSHRC to 'yes'
# For example:
#   sh install.sh --unattended
# or:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
#
set -e
# Make sure important variables exist if not already defined
#
# $USER is defined by login(1) which is not always executed (e.g. containers)
# POSIX: https://pubs.opengroup.org/onlinepubs/009695299/utilities/id.html
# $HOME is defined at the time of login, but it could be unset. If it is unset,
# a tilde by itself (~) will not be expanded to the current user's home directory.
# POSIX: https://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap08.html#tag_08_03
# macOS does not have getent, but this works even if $HOME is unset
# Track if $ZSH was provided USER=${USER:-$(id -u -n)} ZSH="${ZSH:-$HOME/.oh-my-zsh}" custom_zsh=${ZSH:+yes}
# Use $zdot to keep track of where the directory is for zsh dotfiles
# To check if $ZDOTDIR was provided, explicitly check for $ZDOTDIR zdot="${ZDOTDIR:-$HOME}"
# Default value for $ZSH
# a) if $ZDOTDIR is supplied and not $HOME: $ZDOTDIR/ohmyzsh
# b) otherwise, $HOME/.oh-my-zsh
if [ -n "$ZDOTDIR" ] && [ "$ZDOTDIR" != "$HOME" ]; then
  ZSH="${ZSH:-$ZDOTDIR/ohmyzsh}"
fi
# Default settings /usr/bin/python3 -W ignore:setup.py install is deprecated setup.py egg_info --egg-base build/py_publisher build --build-base /home/colin/Terrance/src/py_publisher/build/py_publisher/build install --record /home/colin/Terrance/src/py_publisher/build/py_publisher/install.log --single-version-externally-managed install_data
[0.678s] DEBUG:colcon.colcon_core.event_handler.log_command:Invoked command in '/home/colin/Terrance/src/py_publisher' returned '0': BRANCH=${BRANCH:-master}
# Other options CHSH=${CHSH:-yes} HOME="${HOME:-$(eval echo ~$USER)}" KEEP_ZSHRC=${KEEP_ZSHRC:-no}
command_exists() {
  command -v "$@" >/dev/null 2>&1
}
user_can_sudo() {
  # Check if sudo is installed
  command_exists sudo || return 1
  # Termux can't run sudo, so we can detect it and exit the function early.
  case "$PREFIX" in
  *com.termux*) return 1 ;;
  esac
  # The following command has 3 parts:
  #
  # 1. Run `sudo` with `-v`. Does the following:
  #    • with privilege: asks for a password immediately.
  #    • without privilege: exits with error code 1 and prints the message:
  #      Sorry, user <username> may not run sudo on <hostname>
  #
  # 2. Pass `-n` to `sudo` to tell it to not ask for a password. If the
  #    password is not PYTHONPATH=/home/colin/Terrance/src/py_publisher/build/py_publisher/prefix_override:/home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages:${PYTHONPATH} REMOTE=${REMOTE:-https://github.com/${REPO}.git} REPO=${REPO:-ohmyzsh/ohmyzsh} RUNZSH=${RUNZSH:-yes} SUDO_COMMAND=/usr/bin/sh -c #!/bin/sh
#
# This script should be run via curl:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via wget:
#   sh -c "$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# or via fetch:
#   sh -c "$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#
# As an alternative, you can first download the install script and run it afterwards:
#   wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
#   sh install.sh
#
# You can tweak the install behavior by setting variables when running the script. For
# example, to change the path to the Oh My Zsh repository:
#   ZSH=~/.zsh sh install.sh
#
# Respects the following environment variables:
#   ZDOTDIR - path to Zsh dotfiles directory (default: unset). See [1][2]
#             [1] https://zsh.sourceforge.io/Doc/Release/Parameters.html#index-ZDOTDIR
#             [2] https://zsh.sourceforge.io/Doc/Release/Files.html#index-ZDOTDIR_002c-use-of
#   ZSH     - path to the Oh My Zsh repository folder (default: $HOME/.oh-my-zsh)
#   REPO    - name of the GitHub repo to install from (default: ohmyzsh/ohmyzsh)
#   REMOTE  - full remote URL of the git repo to install (default: GitHub via HTTPS)
#   BRANCH  - branch to check out immediately after install (default: master)
#
# Other options:
#   CHSH       - 'no' means the installer will not change the default shell (default: yes)
#   RUNZSH     - 'no' means the installer will not run zsh after the install (default: yes)
#   KEEP_ZSHRC - 'yes' means the installer will not replace an existing .zshrc (default: no)
#
# You can also pass some arguments to the install script to set some these options:
#   --skip-chsh: has the same behavior as setting CHSH to 'no'
#   --unattended: sets both CHSH and RUNZSH to 'no'
#   --keep-zshrc: sets KEEP_ZSHRC to 'yes'
# For example:
#   sh install.sh --unattended
# or:
#   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
#
set -e
# Make sure important variables exist if not already defined
#
# $USER is defined by login(1) which is not always executed (e.g. containers)
# POSIX: https://pubs.opengroup.org/onlinepubs/009695299/utilities/id.html
# $HOME is defined at the time of login, but it could be unset. If it is unset,
# a tilde by itself (~) will not be expanded to the current user's home directory.
# POSIX: https://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap08.html#tag_08_03
# macOS does not have getent, but this works even if $HOME is unset
# Track if $ZSH was provided USER=${USER:-$(id -u -n)} ZSH="${ZSH:-$HOME/.oh-my-zsh}" custom_zsh=${ZSH:+yes}
# Use $zdot to keep track of where the directory is for zsh dotfiles
# To check if $ZDOTDIR was provided, explicitly check for $ZDOTDIR zdot="${ZDOTDIR:-$HOME}"
# Default value for $ZSH
# a) if $ZDOTDIR is supplied and not $HOME: $ZDOTDIR/ohmyzsh
# b) otherwise, $HOME/.oh-my-zsh
if [ -n "$ZDOTDIR" ] && [ "$ZDOTDIR" != "$HOME" ]; then
  ZSH="${ZSH:-$ZDOTDIR/ohmyzsh}"
fi
# Default settings /usr/bin/python3 -W ignore:setup.py install is deprecated setup.py egg_info --egg-base build/py_publisher build --build-base /home/colin/Terrance/src/py_publisher/build/py_publisher/build install --record /home/colin/Terrance/src/py_publisher/build/py_publisher/install.log --single-version-externally-managed install_data
[0.680s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher' for CMake module files
[0.680s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher' for CMake config files
[0.681s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher/lib'
[0.681s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher/bin'
[0.681s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher/lib/pkgconfig/py_publisher.pc'
[0.682s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher/lib/python3.10/site-packages'
[0.682s] Level 1:colcon.colcon_core.shell:create_environment_hook('py_publisher', 'pythonpath')
[0.682s] INFO:colcon.colcon_core.shell:Creating environment hook '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/hook/pythonpath.ps1'
[0.682s] INFO:colcon.colcon_core.shell:Creating environment descriptor '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/hook/pythonpath.dsv'
[0.683s] INFO:colcon.colcon_core.shell:Creating environment hook '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/hook/pythonpath.sh'
[0.683s] Level 1:colcon.colcon_core.environment:checking '/home/colin/Terrance/src/py_publisher/install/py_publisher/bin'
[0.683s] Level 1:colcon.colcon_core.environment:create_environment_scripts_only(py_publisher)
[0.683s] INFO:colcon.colcon_core.shell:Creating package script '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/package.ps1'
[0.684s] INFO:colcon.colcon_core.shell:Creating package descriptor '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/package.dsv'
[0.684s] INFO:colcon.colcon_core.shell:Creating package script '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/package.sh'
[0.684s] INFO:colcon.colcon_core.shell:Creating package script '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/package.bash'
[0.685s] INFO:colcon.colcon_core.shell:Creating package script '/home/colin/Terrance/src/py_publisher/install/py_publisher/share/py_publisher/package.zsh'
[0.685s] Level 1:colcon.colcon_core.environment:create_file_with_runtime_dependencies(/home/colin/Terrance/src/py_publisher/install/py_publisher/share/colcon-core/packages/py_publisher)
[0.685s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:closing loop
[0.685s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:loop closed
[0.685s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:run_until_complete finished with '0'
[0.685s] DEBUG:colcon.colcon_core.event_reactor:joining thread
[0.689s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_notification.desktop_notification.notify_send': Could not find 'notify-send'
[0.689s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_notification.desktop_notification.terminal_notifier': Not used on non-Darwin systems
[0.689s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_notification.desktop_notification.win32': Not used on non-Windows systems
[0.689s] INFO:colcon.colcon_notification.desktop_notification:Sending desktop notification using 'notify2'
[0.692s] DEBUG:colcon.colcon_notification.desktop_notification.notify2:Failed to initialize notify2: org.freedesktop.DBus.Error.ServiceUnknown: The name org.freedesktop.Notifications was not provided by any .service files
[0.692s] DEBUG:colcon.colcon_core.event_reactor:joined thread
[0.693s] INFO:colcon.colcon_core.shell:Creating prefix script '/home/colin/Terrance/src/py_publisher/install/local_setup.ps1'
[0.693s] INFO:colcon.colcon_core.shell:Creating prefix util module '/home/colin/Terrance/src/py_publisher/install/_local_setup_util_ps1.py'
[0.694s] INFO:colcon.colcon_core.shell:Creating prefix chain script '/home/colin/Terrance/src/py_publisher/install/setup.ps1'
[0.694s] INFO:colcon.colcon_core.shell:Creating prefix script '/home/colin/Terrance/src/py_publisher/install/local_setup.sh'
[0.695s] INFO:colcon.colcon_core.shell:Creating prefix util module '/home/colin/Terrance/src/py_publisher/install/_local_setup_util_sh.py'
[0.695s] INFO:colcon.colcon_core.shell:Creating prefix chain script '/home/colin/Terrance/src/py_publisher/install/setup.sh'
[0.696s] INFO:colcon.colcon_core.shell:Creating prefix script '/home/colin/Terrance/src/py_publisher/install/local_setup.bash'
[0.696s] INFO:colcon.colcon_core.shell:Creating prefix chain script '/home/colin/Terrance/src/py_publisher/install/setup.bash'
[0.696s] INFO:colcon.colcon_core.shell:Creating prefix script '/home/colin/Terrance/src/py_publisher/install/local_setup.zsh'
[0.696s] INFO:colcon.colcon_core.shell:Creating prefix chain script '/home/colin/Terrance/src/py_publisher/install/setup.zsh'
